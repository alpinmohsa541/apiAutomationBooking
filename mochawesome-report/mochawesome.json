{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 0,
    "pending": 0,
    "failures": 3,
    "start": "2024-10-08T04:23:18.266Z",
    "end": "2024-10-08T04:23:21.626Z",
    "duration": 3360,
    "testsRegistered": 3,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4747e592-5e1f-46a9-b900-c317575bf83f",
      "title": "",
      "fullFile": "D:\\Project Alpin\\apiAutomationBooking\\module\\test\\suites\\booking.suites.js",
      "file": "\\module\\test\\suites\\booking.suites.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b4786704-297b-4b14-a68f-b17be3556a20",
          "title": "End to end - Booking",
          "fullFile": "D:\\Project Alpin\\apiAutomationBooking\\module\\test\\suites\\booking.suites.js",
          "file": "\\module\\test\\suites\\booking.suites.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Success Create Booking",
              "fullTitle": "End to end - Booking Success Create Booking",
              "timedOut": false,
              "duration": 1337,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await createBooking()\nexpect((await response).status).to.equal(200)\nbookingId = (await response).body.bookingId",
              "err": {
                "message": "AssertionError: expected 418 to equal 200",
                "estack": "AssertionError: expected 418 to equal 200\n    at Context.<anonymous> (file:///D:/Project%20Alpin/apiAutomationBooking/module/test/suites/booking.suites.js:13:44)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 418\n+ 200\n"
              },
              "uuid": "47598dea-87d0-444a-aa4c-24b2f9667de4",
              "parentUUID": "b4786704-297b-4b14-a68f-b17be3556a20",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success Get Booking",
              "fullTitle": "End to end - Booking Success Get Booking",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await getBooking.id(bookingId)\nexpect((await response).status).to.equal(200)\nbookingId = (await response).body.bookingId",
              "err": {
                "message": "ReferenceError: bookingId is not defined",
                "estack": "ReferenceError: bookingId is not defined\n    at Object.getBookingId [as id] (file:///D:/Project%20Alpin/apiAutomationBooking/module/test/function/getBooking.spec.js:22:26)\n    at Context.<anonymous> (file:///D:/Project%20Alpin/apiAutomationBooking/module/test/suites/booking.suites.js:18:43)\n    at process.processImmediate (node:internal/timers:483:21)",
                "diff": null
              },
              "uuid": "e07a9d4d-f34a-4daa-a0ad-cd9316b7392e",
              "parentUUID": "b4786704-297b-4b14-a68f-b17be3556a20",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success Update Booking",
              "fullTitle": "End to end - Booking Success Update Booking",
              "timedOut": true,
              "duration": 2006,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let token = await createToken()\nconst response = await updateBooking(bookingId,token)\nexpect((await response).status).to.equal(200)",
              "err": {
                "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (D:\\Project Alpin\\apiAutomationBooking\\module\\test\\suites\\booking.suites.js)",
                "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (D:\\Project Alpin\\apiAutomationBooking\\module\\test\\suites\\booking.suites.js)\n    at listOnTimeout (node:internal/timers:581:17)\n    at process.processTimers (node:internal/timers:519:7)",
                "diff": null
              },
              "uuid": "dcb3b834-b7b6-44ae-a4ce-fe3f56b85a46",
              "parentUUID": "b4786704-297b-4b14-a68f-b17be3556a20",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "47598dea-87d0-444a-aa4c-24b2f9667de4",
            "e07a9d4d-f34a-4daa-a0ad-cd9316b7392e",
            "dcb3b834-b7b6-44ae-a4ce-fe3f56b85a46"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3343,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}